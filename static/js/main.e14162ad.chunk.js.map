{"version":3,"sources":["assets/error.svg","assets/pen.svg","assets/trash.svg","initialData.js","common/crud.js","common/regex.js","components/AddSongForm/index.jsx","components/EditSongForm/index.jsx","components/Song/index.jsx","components/SongsList/index.jsx","pages/HomePage/index.jsx","common/sorting.js","App.js","index.js"],"names":["module","exports","initialData","id","artist","songName","link","setData","data","localStorage","setItem","JSON","stringify","onlySpaces","AddSongForm","openAddNewModal","setOpenAddNewModal","songsList","fetchAndSetData","useState","newArtist","setNewArtist","newSongName","setNewSongName","newSongLink","setNewSongLink","errorMsg","setErrorMsg","handleInputChange","e","target","name","value","resetForm","classNames","modal","open","onClose","center","className","src","errorIcon","alt","onSubmit","preventDefault","test","lastSongIdInList","Math","max","apply","map","song","newSong","updatedList","addSong","Infinity","trim","htmlFor","type","placeholder","onChange","required","onClick","EditSong","setOpen","info","editArtist","setEditArtist","editSongName","setEditSongName","editLink","setEditLink","updatedSong","findIndex","updateSong","disabled","Song","openModal","setOpenModal","handleSongDelete","window","confirm","filter","deleteSong","href","rel","penIcon","trashIcon","EditSongForm","SongsList","filteredArtist","setFilteredArtist","filteredData","toLowerCase","includes","length","key","HomePage","setSongsList","sortByValue","setSortByValue","useEffect","response","hasOwnProperty","parse","getItem","sortedSongsList","sort","a","b","property","localeCompare","sortBy","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e14162ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.8b9d35f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.6d13e479.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash.a9966d74.svg\";","const initialData = [\r\n  {\r\n    id: 1,\r\n    artist: 'AC/DC',\r\n    songName: 'Fire Your Guns',\r\n    link: 'https://www.youtube.com/watch?v=Ox7UkxBVXBs'\r\n  },\r\n  {\r\n    id: 2,\r\n    artist: 'Bon Jovi',\r\n    songName: 'It\\'s my life',\r\n    link: 'https://www.youtube.com/watch?v=vx2u5uUu3DE'\r\n  },\r\n  {\r\n    id: 3,\r\n    artist: 'Bon Jovi',\r\n    songName: 'You Give Love A Bad Name',\r\n    link: 'https://www.youtube.com/watch?v=KrZHPOeOxQQ'\r\n  },\r\n  {\r\n    id: 4,\r\n    artist: 'Bryan Adams',\r\n    songName: 'Summer Of \\'69',\r\n    link: 'https://www.youtube.com/watch?v=eFjjO_lhf9c'\r\n  },\r\n  {\r\n    id: 5,\r\n    artist: 'Elle King',\r\n    songName: 'Good Girls',\r\n    link: 'https://www.youtube.com/watch?v=lq0qbbj2c50'\r\n  }\r\n]\r\n\r\nexport default initialData;\r\n","import initialData from '../initialData';\r\n\r\nexport const setData = (data = initialData) => {\r\n  localStorage.setItem('data', JSON.stringify(data));\r\n};\r\n\r\nexport const loadData = () => {\r\n  const localStorageExists = localStorage.hasOwnProperty('data');\r\n  if (!localStorageExists) setData();\r\n  return JSON.parse(localStorage.getItem('data'));\r\n};\r\n\r\nexport const deleteSong = (id, songsList) => {\r\n  const updatedList = songsList.filter(song => song.id !== id);\r\n\r\n  setData(updatedList);\r\n};\r\n\r\nexport const addSong = (newSong, songsList) => {\r\n  const updatedList = [\r\n    ...songsList,\r\n    newSong\r\n  ];\r\n\r\n  setData(updatedList);\r\n};\r\n\r\nexport const updateSong = (updatedSong, songsList) => {\r\n  const updatedList = [...songsList];\r\n  const songIndex = songsList.findIndex(song => song.id === updatedSong.id);\r\n  updatedList[songIndex] = updatedSong;\r\n\r\n  setData(updatedList);\r\n};\r\n","export const onlySpaces = /^\\s+$/;","import React, { useState } from 'react';\r\n\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\n\r\nimport '../../styles/_modal.scss';\r\nimport errorIcon from '../../assets/error.svg';\r\n\r\nimport { addSong } from '../../common/crud';\r\nimport { onlySpaces } from '../../common/regex';\r\n\r\nconst AddSongForm = ({ openAddNewModal, setOpenAddNewModal, songsList, fetchAndSetData }) => {\r\n  const [ newArtist, setNewArtist ] = useState('');\r\n  const [ newSongName, setNewSongName ] = useState('');\r\n  const [ newSongLink, setNewSongLink ] = useState('');\r\n  const [ errorMsg, setErrorMsg ] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    if (e.target.name === 'newArtist') setNewArtist(e.target.value);\r\n    if (e.target.name === 'newSongName') setNewSongName(e.target.value);\r\n    if (e.target.name === 'newSongLink') setNewSongLink(e.target.value);\r\n  };\r\n\r\n  const handleAddSong = e => {\r\n    e.preventDefault();\r\n\r\n    if (onlySpaces.test(newArtist) || onlySpaces.test(newSongName)) {\r\n      setErrorMsg('Input fields can\\'t be empty.');\r\n    } else {\r\n      const lastSongIdInList = Math.max.apply(Math, songsList.map(song => song.id));\r\n      const newId = lastSongIdInList === -Infinity ? 1 : lastSongIdInList + 1;\r\n\r\n      const newSong = {\r\n        id: newId,\r\n        artist: newArtist.trim(),\r\n        songName: newSongName.trim(),\r\n        link: newSongLink.trim()\r\n      };\r\n\r\n      addSong(newSong, songsList);\r\n      fetchAndSetData();\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNewArtist('');\r\n    setNewSongName('');\r\n    setNewSongLink('');\r\n    setErrorMsg('');\r\n    setOpenAddNewModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal classNames={{ modal: 'modal' }} open={openAddNewModal} onClose={() => setOpenAddNewModal(false)} center>\r\n      <h2 className='title'>Add New Song</h2>\r\n      {errorMsg && <p className='error-message'><img src={errorIcon} alt='Error' /> {errorMsg}</p>}\r\n\r\n      <form onSubmit={handleAddSong}>\r\n      <label htmlFor='newArtist'>Artist:</label>\r\n        <input\r\n          type='text'\r\n          name='newArtist'\r\n          placeholder='Artist Name'\r\n          value={newArtist}\r\n          onChange={handleInputChange}\r\n          required={true}\r\n        />\r\n\r\n        <label htmlFor='newSongName'>Song Name:</label>\r\n        <input\r\n          type='text'\r\n          name='newSongName'\r\n          placeholder='Song Name'\r\n          value={newSongName}\r\n          onChange={handleInputChange}\r\n          required={true}\r\n        />\r\n\r\n        <label htmlFor='newSongLink'>Link:</label>\r\n        <input\r\n          type='url'\r\n          name='newSongLink'\r\n          placeholder='Song Link'\r\n          value={newSongLink}\r\n          onChange={handleInputChange}\r\n          required={true}\r\n        />\r\n\r\n        <button className='confirm' type='submit'>Confirm</button>\r\n      </form>\r\n      <button className='cancel' type='reset' onClick={() => setOpenAddNewModal(false)}>Cancel</button>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default AddSongForm;","import React, { useState } from 'react';\r\n\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\n\r\nimport '../../styles/_modal.scss';\r\nimport errorIcon from '../../assets/error.svg';\r\n\r\nimport { updateSong } from '../../common/crud';\r\nimport { onlySpaces } from '../../common/regex';\r\n\r\nconst EditSong = ({ open, setOpen, info, songsList, fetchAndSetData }) => {\r\n  const { id, artist, songName, link } = info;\r\n  const [ editArtist, setEditArtist ] = useState(artist);\r\n  const [ editSongName, setEditSongName ] = useState(songName);\r\n  const [ editLink, setEditLink ] = useState(link);\r\n  const [ errorMsg, setErrorMsg ] = useState('');\r\n\r\n  const handleInputChange = e => {\r\n    if (e.target.name === 'editArtist') setEditArtist(e.target.value);\r\n    if (e.target.name === 'editSongName') setEditSongName(e.target.value);\r\n    if (e.target.name === 'editLink') setEditLink(e.target.value);\r\n  };\r\n\r\n  const handleEditSong = e => {\r\n    e.preventDefault();\r\n    \r\n    if (onlySpaces.test(editArtist) || onlySpaces.test(editSongName)) {\r\n      setErrorMsg('Input fields can\\'t be empty');\r\n    } else {\r\n      const updatedSong = {\r\n        id,\r\n        artist: editArtist.trim(),\r\n        songName: editSongName.trim(),\r\n        link: editLink.trim()\r\n      };\r\n\r\n      updateSong(updatedSong, songsList);\r\n      fetchAndSetData();\r\n      setOpen(false);\r\n      setErrorMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal classNames={{ modal: 'modal' }} open={open} onClose={() => setOpen(false)} center>\r\n      <h2 className='title'>Edit song</h2>\r\n      <h4>{artist} - {songName}</h4>\r\n      {errorMsg && <p className='error-message'><img src={errorIcon} alt='Error' /> {errorMsg}</p>}\r\n\r\n      <form onSubmit={handleEditSong}>\r\n        <label htmlFor='id'>ID:</label>\r\n        <input\r\n          type='number'\r\n          name='id'\r\n          placeholder='ID'\r\n          value={id}\r\n          disabled={true}\r\n        />\r\n\r\n        <label htmlFor='editArtist'>Artist:</label>\r\n        <input\r\n          type='text'\r\n          name='editArtist'\r\n          placeholder='Artist Name'\r\n          value={editArtist}\r\n          onChange={handleInputChange}\r\n          required={true}\r\n        />\r\n\r\n        <label htmlFor='editSongName'>Song Name:</label>\r\n        <input\r\n          type='text'\r\n          name='editSongName'\r\n          placeholder='Song Name'\r\n          value={editSongName}\r\n          onChange={handleInputChange}\r\n          required={true}\r\n        />\r\n\r\n        <label htmlFor='editLink'>Link:</label>\r\n        <input\r\n          type='url'\r\n          name='editLink'\r\n          placeholder='Song Link'\r\n          value={editLink}\r\n          onChange={handleInputChange}\r\n          required={true}\r\n        />\r\n        <button className='confirm' type='submit'>Save changes</button>\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default EditSong;","import React, { useState } from 'react';\r\nimport './styles.scss';\r\n\r\nimport { deleteSong } from '../../common/crud';\r\nimport EditSongForm from '../EditSongForm';\r\n\r\nimport penIcon from '../../assets/pen.svg';\r\nimport trashIcon from '../../assets/trash.svg';\r\n\r\nconst Song = ({ info, songsList, fetchAndSetData }) => {\r\n  const { id, artist, songName, link } = info;\r\n  const [ openModal, setOpenModal ] = useState(false);\r\n\r\n  const handleSongDelete = id => {\r\n    if (window.confirm(`Are you sure you want to delete \"${artist} - ${songName}\"?`)){\r\n      deleteSong(id, songsList);\r\n      fetchAndSetData();\r\n    };\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div className='song'>\r\n      <p className='id'>{id}</p>\r\n      <p className='artist'>{artist}</p>\r\n      <p className='song-name'>{songName}</p>\r\n      <a className='link' href={link} target='_blank' rel=\"noopener noreferrer\">{link}</a>\r\n      <div className='actions'>\r\n        <img src={penIcon} alt='Edit' onClick={() => setOpenModal(true)} />\r\n        <img src={trashIcon} alt='Delete' onClick={() => handleSongDelete(id)} />\r\n      </div>\r\n\r\n      {openModal ? \r\n        <EditSongForm\r\n          open={openModal}\r\n          setOpen={setOpenModal}\r\n          info={info}\r\n          songsList={songsList}\r\n          fetchAndSetData={fetchAndSetData}\r\n        />\r\n        :\r\n        null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Song;","import React, { useState } from 'react';\r\n\r\nimport './styles.scss';\r\n\r\nimport Song from '../Song';\r\n\r\nconst SongsList = ({ songsList, fetchAndSetData }) => {\r\n  const [ filteredArtist, setFilteredArtist ] = useState('');\r\n  const filteredData = songsList.filter(song => song.artist.toLowerCase().includes(filteredArtist.toLowerCase()));\r\n\r\n  return (\r\n    <div className='songs-list'>\r\n      <input\r\n        className='search'\r\n        placeholder='Search the list by artist...'\r\n        name='searchByArtist'\r\n        onChange={e => setFilteredArtist(e.target.value.trim())}\r\n      />\r\n      \r\n      <div className='columns'>\r\n        <p className='id'>#</p>\r\n        <p className='artist'>Artist</p>\r\n        <p className='song-name'>Song Name</p>\r\n        <p className='link'>Link</p>\r\n      </div>\r\n\r\n      {filteredData.length === 0 ?\r\n        <p>No data.</p>\r\n        :\r\n        filteredData && filteredData.map(song => (\r\n          <Song\r\n            key={song.id}\r\n            info={song}\r\n            songsList={songsList}\r\n            fetchAndSetData={fetchAndSetData}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SongsList;","import React, { useState, useEffect } from 'react';\r\n\r\nimport './styles.scss';\r\n\r\nimport { setData, loadData } from '../../common/crud';\r\nimport { sortBy, sortById } from '../../common/sorting';\r\n\r\nimport AddSongForm from '../../components/AddSongForm';\r\nimport SongsList from '../../components/SongsList';\r\n\r\nconst HomePage = () => {\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [sortByValue, setSortByValue] = useState('');\r\n  const [openAddNewModal, setOpenAddNewModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchAndSetData();\r\n  }, []);\r\n\r\n  const fetchAndSetData = () => {\r\n    const response = loadData();\r\n    setSongsList(response);\r\n  };\r\n\r\n  const handleSort = e => {\r\n    e.preventDefault();\r\n    const sort = e.target.value;\r\n\r\n    let sortedSongsList;\r\n    if (sort === 'sortById') {\r\n      sortedSongsList = sortById(songsList);\r\n    } else {\r\n      const property = sort === 'sortBySongName' ? 'songName' : 'artist';\r\n      sortedSongsList = sortBy(songsList, property);\r\n    }\r\n\r\n    setData(sortedSongsList);\r\n    setSortByValue(sort);\r\n    fetchAndSetData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>Songs List</h1>\r\n        <select value={sortByValue} onChange={handleSort}>\r\n          <option value='' disabled>\r\n            Sort by\r\n          </option>\r\n          <option value='sortById'>Id</option>\r\n          <option value='sortByArtist'>Artist</option>\r\n          <option value='sortBySongName'>Song Name</option>\r\n        </select>\r\n        <span className='add-new' onClick={() => setOpenAddNewModal(true)}>\r\n          Add New Song\r\n        </span>\r\n      </header>\r\n\r\n      {openAddNewModal ? (\r\n        <AddSongForm\r\n          openAddNewModal={openAddNewModal}\r\n          setOpenAddNewModal={setOpenAddNewModal}\r\n          songsList={songsList}\r\n          fetchAndSetData={fetchAndSetData}\r\n        />\r\n      ) : null}\r\n\r\n      <SongsList songsList={songsList} fetchAndSetData={fetchAndSetData} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export const sortById = data => {\r\n  return data.sort((a, b) => a.id - b.id);\r\n};\r\n\r\nexport const sortBy = (data, property) => {\r\n  const sorted = data.sort((a, b) => {\r\n    return a[property].toLowerCase().localeCompare(b[property].toLowerCase());\r\n  });\r\n\r\n  return sorted;\r\n};","import React from 'react';\n\nimport HomePage from './pages/HomePage';\n\nfunction App() {\n  return (\n    <>\n      <HomePage />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}