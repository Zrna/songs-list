{"version":3,"sources":["assets/error.svg","assets/pen.svg","assets/trash.svg","initialData.js","crud/index.js","utils/regex.js","components/AddSongForm/index.jsx","components/EditSongForm/index.jsx","components/Song/index.jsx","components/SongsList/index.jsx","pages/HomePage/index.jsx","utils/sorting.js","App.js","index.js"],"names":["initialData","id","artist","songName","link","setData","data","localStorage","setItem","JSON","stringify","onlySpaces","AddSongForm","openAddNewModal","setOpenAddNewModal","songsList","fetchAndSetData","useState","newArtist","setNewArtist","newSongName","setNewSongName","newSongLink","setNewSongLink","errorMsg","setErrorMsg","resetForm","classNames","modal","open","onClose","center","className","src","errorIcon","alt","onSubmit","e","preventDefault","test","lastSongIdInList","Math","max","apply","map","song","newSong","updatedList","addSong","Infinity","trim","htmlFor","type","name","placeholder","value","onChange","target","required","onClick","EditSong","setOpen","info","editArtist","setEditArtist","editSongName","setEditSongName","editLink","setEditLink","updatedSong","findIndex","updateSong","disabled","Song","openModal","setOpenModal","handleSongDelete","window","confirm","filter","deleteSong","href","rel","penIcon","trashIcon","EditSongForm","SongsList","filteredArtist","setFilteredArtist","filteredData","toLowerCase","includes","length","HomePage","setSongsList","sortByValue","setSortByValue","useEffect","response","hasOwnProperty","parse","getItem","sortedSongsList","sortType","sort","a","b","property","localeCompare","sortBy","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.525dace2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.1059807a.svg\";","export default __webpack_public_path__ + \"static/media/pen.b783cc70.svg\";","export default __webpack_public_path__ + \"static/media/trash.88a535b3.svg\";","const initialData = [\r\n  {\r\n    id: 1,\r\n    artist: 'AC/DC',\r\n    songName: 'Fire Your Guns',\r\n    link: 'https://www.youtube.com/watch?v=Ox7UkxBVXBs',\r\n  },\r\n  {\r\n    id: 2,\r\n    artist: 'Bon Jovi',\r\n    songName: \"It's my life\",\r\n    link: 'https://www.youtube.com/watch?v=vx2u5uUu3DE',\r\n  },\r\n  {\r\n    id: 3,\r\n    artist: 'Bon Jovi',\r\n    songName: 'You Give Love A Bad Name',\r\n    link: 'https://www.youtube.com/watch?v=KrZHPOeOxQQ',\r\n  },\r\n  {\r\n    id: 4,\r\n    artist: 'Bryan Adams',\r\n    songName: \"Summer Of '69\",\r\n    link: 'https://www.youtube.com/watch?v=eFjjO_lhf9c',\r\n  },\r\n  {\r\n    id: 5,\r\n    artist: 'Elle King',\r\n    songName: 'Good Girls',\r\n    link: 'https://www.youtube.com/watch?v=lq0qbbj2c50',\r\n  },\r\n];\r\n\r\nexport default initialData;\r\n","import initialData from '../initialData';\r\n\r\nexport const setData = (data = initialData) => {\r\n  localStorage.setItem('data', JSON.stringify(data));\r\n};\r\n\r\nexport const loadData = () => {\r\n  const localStorageExists = localStorage.hasOwnProperty('data');\r\n  if (!localStorageExists) setData();\r\n  return JSON.parse(localStorage.getItem('data'));\r\n};\r\n\r\nexport const deleteSong = (id, songsList) => {\r\n  const updatedList = songsList.filter(song => song.id !== id);\r\n\r\n  setData(updatedList);\r\n};\r\n\r\nexport const addSong = (newSong, songsList) => {\r\n  const updatedList = [...songsList, newSong];\r\n\r\n  setData(updatedList);\r\n};\r\n\r\nexport const updateSong = (updatedSong, songsList) => {\r\n  const updatedList = [...songsList];\r\n  const songIndex = songsList.findIndex(song => song.id === updatedSong.id);\r\n  updatedList[songIndex] = updatedSong;\r\n\r\n  setData(updatedList);\r\n};\r\n","export const onlySpaces = /^\\s+$/;\r\n","import { useState } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\n\r\nimport { errorIcon } from '../../assets';\r\nimport { addSong } from '../../crud';\r\nimport '../../styles/_modal.scss';\r\nimport { onlySpaces } from '../../utils';\r\n\r\nconst AddSongForm = ({\r\n  openAddNewModal,\r\n  setOpenAddNewModal,\r\n  songsList,\r\n  fetchAndSetData,\r\n}) => {\r\n  const [newArtist, setNewArtist] = useState('');\r\n  const [newSongName, setNewSongName] = useState('');\r\n  const [newSongLink, setNewSongLink] = useState('');\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleAddSong = e => {\r\n    e.preventDefault();\r\n\r\n    if (onlySpaces.test(newArtist) || onlySpaces.test(newSongName)) {\r\n      setErrorMsg(\"Input fields can't be empty.\");\r\n    } else {\r\n      const lastSongIdInList = Math.max.apply(\r\n        Math,\r\n        songsList.map(song => song.id)\r\n      );\r\n      const newId = lastSongIdInList === -Infinity ? 1 : lastSongIdInList + 1;\r\n\r\n      const newSong = {\r\n        id: newId,\r\n        artist: newArtist.trim(),\r\n        songName: newSongName.trim(),\r\n        link: newSongLink.trim(),\r\n      };\r\n\r\n      addSong(newSong, songsList);\r\n      fetchAndSetData();\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setNewArtist('');\r\n    setNewSongName('');\r\n    setNewSongLink('');\r\n    setErrorMsg('');\r\n    setOpenAddNewModal(false);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      classNames={{ modal: 'modal' }}\r\n      open={openAddNewModal}\r\n      onClose={() => setOpenAddNewModal(false)}\r\n      center\r\n    >\r\n      <h2 className='title'>Add New Song</h2>\r\n      {errorMsg && (\r\n        <p className='error-message'>\r\n          <img src={errorIcon} alt='Error' /> {errorMsg}\r\n        </p>\r\n      )}\r\n\r\n      <form onSubmit={handleAddSong}>\r\n        <label htmlFor='newArtist'>Artist:</label>\r\n        <input\r\n          type='text'\r\n          name='newArtist'\r\n          placeholder='Artist Name'\r\n          value={newArtist}\r\n          onChange={e => setNewArtist(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor='newSongName'>Song Name:</label>\r\n        <input\r\n          type='text'\r\n          name='newSongName'\r\n          placeholder='Song Name'\r\n          value={newSongName}\r\n          onChange={e => setNewSongName(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor='newSongLink'>Link:</label>\r\n        <input\r\n          type='url'\r\n          name='newSongLink'\r\n          placeholder='Song Link'\r\n          value={newSongLink}\r\n          onChange={e => setNewSongLink(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <button type='submit' className='confirm'>\r\n          Confirm\r\n        </button>\r\n      </form>\r\n      <button\r\n        type='reset'\r\n        className='cancel'\r\n        onClick={() => setOpenAddNewModal(false)}\r\n      >\r\n        Cancel\r\n      </button>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddSongForm;\r\n","import { useState } from 'react';\r\nimport 'react-responsive-modal/styles.css';\r\nimport { Modal } from 'react-responsive-modal';\r\n\r\nimport { errorIcon } from '../../assets';\r\nimport { updateSong } from '../../crud';\r\nimport '../../styles/_modal.scss';\r\nimport { onlySpaces } from '../../utils';\r\n\r\nconst EditSong = ({ open, setOpen, info, songsList, fetchAndSetData }) => {\r\n  const { id, artist, songName, link } = info;\r\n  const [editArtist, setEditArtist] = useState(artist);\r\n  const [editSongName, setEditSongName] = useState(songName);\r\n  const [editLink, setEditLink] = useState(link);\r\n  const [errorMsg, setErrorMsg] = useState('');\r\n\r\n  const handleEditSong = e => {\r\n    e.preventDefault();\r\n\r\n    if (onlySpaces.test(editArtist) || onlySpaces.test(editSongName)) {\r\n      setErrorMsg(\"Input fields can't be empty\");\r\n    } else {\r\n      const updatedSong = {\r\n        id,\r\n        artist: editArtist.trim(),\r\n        songName: editSongName.trim(),\r\n        link: editLink.trim(),\r\n      };\r\n\r\n      updateSong(updatedSong, songsList);\r\n      fetchAndSetData();\r\n      setOpen(false);\r\n      setErrorMsg('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      classNames={{ modal: 'modal' }}\r\n      open={open}\r\n      onClose={() => setOpen(false)}\r\n      center\r\n    >\r\n      <h2 className='title'>Edit song</h2>\r\n      <h4>\r\n        {artist} - {songName}\r\n      </h4>\r\n\r\n      {errorMsg && (\r\n        <p className='error-message'>\r\n          <img src={errorIcon} alt='Error' /> {errorMsg}\r\n        </p>\r\n      )}\r\n\r\n      <form onSubmit={handleEditSong}>\r\n        <label htmlFor='id'>ID:</label>\r\n        <input type='number' name='id' placeholder='ID' value={id} disabled />\r\n\r\n        <label htmlFor='editArtist'>Artist:</label>\r\n        <input\r\n          type='text'\r\n          name='editArtist'\r\n          placeholder='Artist Name'\r\n          value={editArtist}\r\n          onChange={e => setEditArtist(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor='editSongName'>Song Name:</label>\r\n        <input\r\n          type='text'\r\n          name='editSongName'\r\n          placeholder='Song Name'\r\n          value={editSongName}\r\n          onChange={e => setEditSongName(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor='editLink'>Link:</label>\r\n        <input\r\n          type='url'\r\n          name='editLink'\r\n          placeholder='Song Link'\r\n          value={editLink}\r\n          onChange={e => setEditLink(e.target.value)}\r\n          required\r\n        />\r\n        <button className='confirm' type='submit'>\r\n          Save changes\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditSong;\r\n","import { useState } from 'react';\r\n\r\nimport { penIcon, trashIcon } from '../../assets';\r\nimport { deleteSong } from '../../crud';\r\nimport EditSongForm from '../EditSongForm';\r\n\r\nimport './styles.scss';\r\n\r\nconst Song = ({ info, songsList, fetchAndSetData }) => {\r\n  const { id, artist, songName, link } = info;\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const handleSongDelete = id => {\r\n    const confirmDelete = window.confirm(\r\n      `Are you sure you want to delete \"${artist} - ${songName}\"?`\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      deleteSong(id, songsList);\r\n      fetchAndSetData();\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div className='song'>\r\n      <p className='id'>{id}</p>\r\n      <p className='artist'>{artist}</p>\r\n      <p className='song-name'>{songName}</p>\r\n      <a className='link' href={link} target='_blank' rel='noopener noreferrer'>\r\n        {link}\r\n      </a>\r\n      <div className='actions'>\r\n        <img src={penIcon} alt='Edit' onClick={() => setOpenModal(true)} />\r\n        <img\r\n          src={trashIcon}\r\n          alt='Delete'\r\n          onClick={() => handleSongDelete(id)}\r\n        />\r\n      </div>\r\n\r\n      {openModal && (\r\n        <EditSongForm\r\n          open={openModal}\r\n          setOpen={setOpenModal}\r\n          info={info}\r\n          songsList={songsList}\r\n          fetchAndSetData={fetchAndSetData}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import { useState } from 'react';\r\n\r\nimport Song from '../Song';\r\n\r\nimport './styles.scss';\r\n\r\nconst SongsList = ({ songsList, fetchAndSetData }) => {\r\n  const [filteredArtist, setFilteredArtist] = useState('');\r\n  const filteredData = songsList.filter(({ artist }) =>\r\n    artist.toLowerCase().includes(filteredArtist.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className='songs-list'>\r\n      <input\r\n        className='search'\r\n        placeholder='Search the list by artist...'\r\n        name='searchByArtist'\r\n        onChange={e => setFilteredArtist(e.target.value.trim())}\r\n      />\r\n\r\n      <div className='columns'>\r\n        <p className='id'>#</p>\r\n        <p className='artist'>Artist</p>\r\n        <p className='song-name'>Song Name</p>\r\n        <p className='link'>Link</p>\r\n      </div>\r\n\r\n      {!filteredData.length ? (\r\n        <p>No data.</p>\r\n      ) : (\r\n        filteredData &&\r\n        filteredData.map(song => (\r\n          <Song\r\n            key={song.id}\r\n            info={song}\r\n            songsList={songsList}\r\n            fetchAndSetData={fetchAndSetData}\r\n          />\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SongsList;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport AddSongForm from '../../components/AddSongForm';\r\nimport SongsList from '../../components/SongsList';\r\nimport { setData, loadData } from '../../crud';\r\nimport { sortBy, sortById } from '../../utils';\r\n\r\nimport './styles.scss';\r\n\r\nconst HomePage = () => {\r\n  const [songsList, setSongsList] = useState([]);\r\n  const [sortByValue, setSortByValue] = useState('');\r\n  const [openAddNewModal, setOpenAddNewModal] = useState(false);\r\n\r\n  useEffect(() => fetchAndSetData(), []);\r\n\r\n  const fetchAndSetData = () => {\r\n    const response = loadData();\r\n    setSongsList(response);\r\n  };\r\n\r\n  const handleSort = e => {\r\n    e.preventDefault();\r\n    const sortType = e.target.value;\r\n\r\n    let sortedSongsList;\r\n    if (sortType === 'sortById') {\r\n      sortedSongsList = sortById(songsList);\r\n    } else {\r\n      const property = sortType === 'sortBySongName' ? 'songName' : 'artist';\r\n      sortedSongsList = sortBy(songsList, property);\r\n    }\r\n\r\n    setData(sortedSongsList);\r\n    setSortByValue(sortType);\r\n    fetchAndSetData();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <h1>Songs List</h1>\r\n        <select value={sortByValue} onChange={handleSort}>\r\n          <option value='' disabled>\r\n            Sort by\r\n          </option>\r\n          <option value='sortById'>Id</option>\r\n          <option value='sortByArtist'>Artist</option>\r\n          <option value='sortBySongName'>Song Name</option>\r\n        </select>\r\n        <span className='add-new' onClick={() => setOpenAddNewModal(true)}>\r\n          Add New Song\r\n        </span>\r\n      </header>\r\n\r\n      {openAddNewModal && (\r\n        <AddSongForm\r\n          openAddNewModal={openAddNewModal}\r\n          setOpenAddNewModal={setOpenAddNewModal}\r\n          songsList={songsList}\r\n          fetchAndSetData={fetchAndSetData}\r\n        />\r\n      )}\r\n\r\n      <SongsList songsList={songsList} fetchAndSetData={fetchAndSetData} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export const sortById = data => {\r\n  return data.sort((a, b) => a.id - b.id);\r\n};\r\n\r\nexport const sortBy = (data, property) => {\r\n  const sorted = data.sort((a, b) => {\r\n    return a[property].toLowerCase().localeCompare(b[property].toLowerCase());\r\n  });\r\n\r\n  return sorted;\r\n};\r\n","import HomePage from './pages/HomePage';\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}